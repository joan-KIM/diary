{"version":3,"sources":["utils/color.js","components/Category/CategoryInputGroup.jsx","components/Category/CategoryLabel.jsx","components/Category/CategoryList.jsx","components/Category/index.jsx","components/DatePicker/constants.js","utils/date.js","components/DatePicker/Day.jsx","components/DatePicker/Week.jsx","components/DatePicker/index.jsx","utils/time.js","components/TimelineItem.jsx","components/TimePicker.jsx","utils/uuid.js","components/Modal.jsx","components/Calendar.jsx","components/Monthly.jsx","components/Date.jsx","components/TodoList/AddTaskBtn.jsx","components/TodoList/InputTask.jsx","components/TodoList/Task.jsx","components/TodoList/TaskList.jsx","components/TodoList/index.jsx","components/Note/index.jsx","components/Daily.jsx","App.js","reportWebVitals.js","index.js"],"names":["COLOR_LIST","pickColor","labelList","colorList","map","label","color","filter","includes","CategoryInputGroup","addNewCalendar","bulletColor","useState","text","setText","className","classNames","style","backgroundColor","margin","type","placeholder","value","onChange","e","changeHandler","target","onClick","CategoryLabel","name","removeCalendar","isShown","CategoryList","labels","length","Category","initialLabels","updateLabels","setIsShown","setLabels","useEffect","removedLabels","DAY_LIST","toDate","dateObj","year","getFullYear","month","getMonth","date","getDate","toDateObj","dateStr","split","fullyear","Number","Date","today","enDay","day","enMonth","Day","events","isPrev","isNext","selected","category","slice","Week","data","isFirstWeek","sundayOfWeek","firstDay","lastDay","lastDate","selectedDate","days","_","DatePicker","getDay","weekNum","weeks","Array","from","week","toTimeLabel","hour","Math","floor","minutes","undefined","TimelineItem","event","title","startTime","endTime","display","place","HOUR_OPTION","i","MINUTE_OPTION","HourPicker","selectHour","h","MinutePicker","minute","selectMinute","m","TimePicker","timeValue","selectTime","initialHour","initialMinute","setHour","setMinute","console","log","str","toTimeValue","uuid","now","Modal","categoryLabels","closeModal","saveEvent","deleteEvent","setTitle","setPlace","setStartTime","setEndTime","setCategory","checked","selectCategory","closest","id","for","Calendar","editEvent","setEditEvent","openModal","items","Monthly","updateEvent","setCategoryLabels","sortedEvents","find","sort","a","b","deletedEvents","Button","ref","useRef","width","setWidth","height","setHeight","offsetLeft","setOffsetLeft","offsetTop","setOffsetTop","left","setLeft","top","setTop","radius","setRadius","isShow","setIsShow","current","clientWidth","clientHeight","max","removeShadow","boxShadow","clientX","clientY","onMouseOver","onMouseOut","onMouseDown","onAnimationEnd","InputTask","createTask","Task","state","isChecked","setIsChecked","TaskList","tasks","removeTask","toggleHandler","todolist","TodoList","Note","content","typing","isEditing","setIsEditing","Daily","update","note","setContent","setTasks","curDate","setCurDate","task","defaultProps","App","setData","setDate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c21f382.chunk.js","sourcesContent":["const COLOR_LIST = ['#28c76f', '#ff9f43','#ff4961','#00cfe8','#ffc107', '#7367f0'];\n// const labelCOLORLIST = ['red', 'orange','yellow', 'blue', 'green'];\n\nexport const pickColor = (labelList) => {\n    // labelList에 있는 컬러를 뽑아\n    const colorList = labelList.map( label => label.color );\n    \n    //labelList에 없는 컬러 중에 첫번째\n    const [color] = COLOR_LIST.filter(color => !colorList.includes(color));\n\n    return color;\n}","import React, { useState } from \"react\";\nimport {MdCheck} from \"react-icons/md\";\nimport classNames from \"classnames\";\n\nexport default function CategoryInputGroup({addNewCalendar, bulletColor}){\n    const [text, setText] = useState('');\n    \n    const changeHandler = (text) => {\n        setText(text);\n    }\n\n    const clickHandler = () => {\n        addNewCalendar(text);\n        setText('');\n    }\n\n    return(\n        <div className='category-input-group'>\n            <div className={classNames('bullet-wrapper', 'inputgroup-border-styling')}>\n                <label \n                    className={classNames('bullet-styling', 'bullet')} \n                    style={ {backgroundColor: bulletColor, margin:'auto 0.8em auto 0.4em'} }\n                />\n            </div>          \n            <input \n                type='text'\n                className={classNames('category-input', 'inputgroup-border-styling')}\n                placeholder='New Calendar' \n                value={text}\n                onChange={e => changeHandler(e.target.value)}    \n            />\n            <div className={classNames('add-calendar-btn', 'inputgroup-border-styling')} onClick={clickHandler} >\n                <MdCheck className='add-btn-mark' />\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { MdClear } from \"react-icons/md\";\n\nexport default function CategoryLabel({name, bulletColor, removeCalendar, isShown}) {\n    return(\n        <li key={bulletColor} className='category-label' >\n            <label \n                className={classNames('bullet-styling', 'bullet')} \n                style={ { backgroundColor: bulletColor } }\n            />\n            {name}\n            { isShown && <MdClear className='delete-category-btn' onClick={e => removeCalendar(bulletColor)} />}\n        </li>\n    )\n}\n","import React from \"react\";\nimport CategoryLabel from \"./CategoryLabel\";\n\nexport default function CategoryList({labels, removeCalendar}) {\n    const labelList = labels.map( label => {\n            return (\n                <CategoryLabel name={label.name} bulletColor={label.color} removeCalendar={removeCalendar} isShown={labels.length > 1} />\n            )\n    });\n\n    return(\n        <ul className='category-list' >\n            {labelList}\n        </ul>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport { pickColor } from \"../../utils/color\";\nimport CategoryInputGroup from \"./CategoryInputGroup\";\nimport CategoryList from \"./CategoryList\";\n\nexport default function Category({initialLabels, updateLabels}){\n    const [isShown, setIsShown] = useState(false);\n    const [labels, setLabels] = useState(initialLabels);\n\n    useEffect(() => {\n        updateLabels(labels);\n    }, [labels])\n\n    const toggleHandler = (e) => {\n        if(labels.length == 6) {\n            return;\n        }else{\n            setIsShown(true);\n        }\n    }\n\n    const addNewCalendar = (text) => {\n        setLabels([\n            ...labels,\n            {\n                'name' : text,\n                'color' : pickColor(labels)\n            }\n        ]);\n        setIsShown(false);\n    }\n\n    const removeCalendar = (color) => {\n        const removedLabels = labels.filter(label => label.color !== color);\n        setLabels(removedLabels);\n    }\n\n    return (\n        <div className='category-section' >\n            <div className='category-wrapper' >\n                <div className='category-header' >\n                    <p style={{margin: '0'}}>CALENDARS</p>\n                    { labels.length < 6 && <MdAdd className='show-inputgroup-btn' onClick={e => toggleHandler(e)} /> }\n                </div>\n\n                <CategoryList labels={labels} removeCalendar={removeCalendar} />\n\n                { isShown && <CategoryInputGroup addNewCalendar={addNewCalendar} bulletColor={pickColor(labels)} /> }\n                \n            </div>\n        </div>\n    )\n}","export const DAY_LIST = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];","export const toDate = (dateObj) => {\n    const year = dateObj.getFullYear() % 100;\n    const month = dateObj.getMonth() + 1;\n    const date = dateObj.getDate();\n\n    return `${year}/${month}/${date}`;\n}\n\nexport const toDateObj = (dateStr) => {\n    const [year, month, date] = dateStr.split('/');\n    const fullyear = Number(year) + 2000;\n\n    return new Date(fullyear, month-1, date);\n}\n\nexport const today = () => {\n    return toDate(new Date());\n}\n\nexport const getDay = (dateStr) => {\n    const date = toDateObj(dateStr)\n    return date.getDay();\n}\n\nexport const enDay = (day) => {\n    const dayList = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    return dayList[day];\n}\n\nexport const enMonth = (month) => {\n    const monthList = ['January','February',' March',' April','May','June','July','August','September','October','November','December'];\n    return monthList[month];\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { today } from \"../../utils/date\";\n\n// value => '22/1/24' 최상단 파일에서 date 전해줄 때 왼쪽과 같은 형태로 전달함\nexport default function Day({events, date, value, isPrev, isNext, selected, onClick}){    \n    return <td  \n                className={classNames('circle-wrapper', {\n                    'prev-month' : isPrev,\n                    'next-month' : isNext,\n                })}\n                onClick={() => onClick(value)}    \n            >\n                <div className={classNames('circle', {\n                    [`category-color-${events?.[0]?.category.color.slice(1)}`] : events?.length > 0,\n                    'today' : today() === value,\n                    'selected' : selected === value,\n                })}\n                >\n                {date}\n                </div>\n            </td>;\n}\n","import React from \"react\";\nimport { DAY_LIST } from \"./constants\";\nimport Day from \"./Day\";\nimport { toDate } from \"../../utils/date\";\n\nexport default function Week({data, isFirstWeek, sundayOfWeek, year, month, firstDay, lastDay, lastDate, selectedDate, onClick}){\n    const days = DAY_LIST.map((_, day) => {\n        let date = sundayOfWeek + day;\n        const isPrev = isFirstWeek && firstDay > day;\n        const isNext = !isFirstWeek && date > lastDate;     // !isFirstWeek :: isPrev와 중복을 막기 위함\n        \n        // 첫째주, 마지막 주\n        if(isFirstWeek && !isPrev){\n            date = 1 + day - firstDay;\n        }\n        if(isNext){\n            date = day - lastDay;\n        }\n\n        const value = toDate(new Date(year, month + (isPrev ? -1 : 0) + (isNext ? 1 : 0), date));\n        return <Day \n            events={data[value]?.events}\n            date={date}\n            value={value}\n            isPrev={isPrev}\n            isNext={isNext}\n            selected={selectedDate}\n            onClick={onClick}\n            />\n    })\n\n    return <tr>{days}</tr>\n}","import React from \"react\";\nimport Week from \"./Week\";\nimport {MdKeyboardArrowLeft, MdKeyboardArrowRight} from \"react-icons/md\";\nimport {toDateObj, enMonth, toDate, today} from '../../utils/date';\nimport { DAY_LIST } from \"./constants\";\n\nexport default function DatePicker({data, selectedDate, changeHandler}){\n    const dateObj = toDateObj(selectedDate);\n    const year = dateObj.getFullYear();\n    const month = dateObj.getMonth();\n\n    // 선택된 날짜가 포함된 달의 첫째 날(의 요일), 마지막 날(의 요일), 마지막 날짜\n    const firstDay = new Date(year, month, 1).getDay();\n    const lastDay = new Date(year, month+1, 0).getDay();\n    const lastDate = new Date(year, month+1, 0).getDate();\n\n    const weekNum = (lastDate > 28 ? 5 : 4) + (lastDay < firstDay ? 1 : 0);\n\n    // Array.from(유사배열객체(length 속성 가짐), 반복가능한 객체)\n    const weeks = Array.from({length : weekNum}, (_, week) => {\n        const isFirstWeek = week === 0;\n        // 첫째 주에 이전 달 날짜가 포함된 경우, 아닌 경우\n        const sundayOfWeek = isFirstWeek \n            ? new Date(year, month, 0).getDate() - firstDay + 1\n            : 1 + (7 - firstDay) + 7 * (week - 1);\n        \n        return <Week \n            data={data}\n            isFirstWeek={isFirstWeek}\n            sundayOfWeek={sundayOfWeek}\n            firstDay={firstDay}\n            lastDay={lastDay}\n            lastDate={lastDate}\n            year={year}\n            month={month}\n            selectedDate={selectedDate}\n            onClick={changeHandler}\n            />\n    })\n\n\n    return (\n        <>\n            <div className='calendar-header'>\n                <div >\n                    <p className='month'>{enMonth(month)}</p>\n                    <p className='year'>{year}</p>\n                </div>\n                <div className='btn-group-wrapper'>\n                    <div className='button-group'>\n                        <button className='prev-btn' onClick={() => changeHandler(toDate(new Date(year, month-1, dateObj.getDate())))}>\n                            <MdKeyboardArrowLeft className='arrow' />\n                        </button>\n                        <button className='today-btn' onClick={() => changeHandler(today())}>\n                            Today\n                        </button>\n                        <button className='next-btn' onClick={() => changeHandler(toDate(new Date(year, month+1, dateObj.getDate())))}>\n                            <MdKeyboardArrowRight className='arrow'/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <table className='calendar'>\n                <tr>\n                    {DAY_LIST.map(day => <td className='row-day'>{day}</td>)}\n                </tr>\n                {weeks}\n            </table>\n        </>\n    )\n}","// 00:00 형태 ---> 숫자값으로 표현\nexport function toTimeValue(str) {\n    const [hour, minutes] = str.split(':');\n\n    return Number(hour) * 60 + Number(minutes);\n}\n\n// 숫자값 ---> 00:00 형태로 표현\nexport function toTimeLabel(value) {\n    const hour = Math.floor(value / 60);\n    const minutes = value % 60;\n\n    if(value === undefined){\n        return '00:00';\n    }\n\n    return (hour<10 ? `0${hour}` : hour) + ':' + (minutes<10 ? `0${minutes}` : minutes);\n}","import React from \"react\";\nimport { toTimeLabel } from \"../utils/time\";\nimport {MdOutlinePlace} from \"react-icons/md\";\n\nexport default function TimelineItem({event, onClick}) {\n    return  <li className='timeline-item' onClick={onClick} >\n                <div className='timeline-point-wrapper'\n                        style={{backgroundColor: `${event.category.color}1f`}}  >\n                    <div className='timeline-point'\n                        style={{backgroundColor: event.category.color}} />\n                </div>\n                <div className='event-wrapper'>\n                    <span className='event-title'>{event.title}</span>\n                    <span className='event-time'>{toTimeLabel(event.startTime)} - {toTimeLabel(event.endTime)}</span>\n                </div>\n                <div style={{ display:'flex'}}>\n                    <MdOutlinePlace className='place-icon' />\n                    <p className='event-place'>{event.place}</p>\n                </div>\n            </li>\n}","import React, { useEffect, useState } from \"react\";\nimport { MdArrowDropDown } from \"react-icons/md\";\nimport { toTimeValue, toTimeLabel } from \"../utils/time\";\n\n// 시간 (01~24) 분 (00~60)\nconst HOUR_OPTION = Array.from({length: 24}, (_, i) => `${i < 10 ? '0' + i : i}`);\nconst MINUTE_OPTION = Array.from({length: 60}, (_, i) => `${i < 10 ? '0' + i : i}`);\n\n// 옵션 선택 -> 선택된 값이 selectHour(), selectMinute()에 전달 -> setHour(값), setMinute(값)\nfunction HourPicker({hour, selectHour}){\n    return  <div>\n                <select onChange={e => selectHour(e.target.value)}  className=\"timepicker\">\n                    {HOUR_OPTION.map(h => <option key={h} value={h} selected={hour===h} >{h}</option>)}\n                </select>\n                <MdArrowDropDown className=\"time-select-btn\" />\n            </div>\n}\n\nfunction MinutePicker({minute, selectMinute}){\n    return  <div >\n                <select onChange={e => selectMinute(e.target.value)} className=\"timepicker\">\n                    {MINUTE_OPTION.map(m => <option key={m} value={m} selected={minute===m} >{m}</option>)}\n                </select>\n                <MdArrowDropDown className=\"time-select-btn\" />\n            </div>\n}\n\n// timeValue는 숫자형태의 값\nexport default function TimePicker({timeValue, selectTime}){\n    const [initialHour, initialMinute] = toTimeLabel(timeValue).split(':');\n    const [hour, setHour] = useState(initialHour);\n    const [minute, setMinute] = useState(initialMinute);\n\n    // selecTime <-- onChange\n    // hour, minute 다 선택되면 00:00 형태로 전달\n    useEffect(() => {\n        if(hour && minute){\n            console.log(hour, minute);\n            selectTime(toTimeValue(`${hour}:${minute}`));\n        }\n    }, [hour, minute, selectTime])\n\n    return  <div className=\"timepicker-wrapper\">\n                <HourPicker hour={hour} selectHour={setHour} />\n                <span>:</span>\n                <MinutePicker minute={minute} selectMinute={setMinute} />\n            </div>\n            \n}\n","export const uuid = () => {\n    return Date.now();\n}","import React, { useState } from \"react\";\nimport { MdOutlineDelete } from \"react-icons/md\";\nimport classNames from \"classnames\";\nimport TimePicker from \"./TimePicker\";\nimport { uuid } from \"../utils/uuid\";\n\nexport default function Modal({event, categoryLabels, closeModal , saveEvent, deleteEvent}){\n    // 등록된 이벤트가 있을 경우(일정 수정할 때) event 존재유무 확인후 초기값 설정\n    const [title, setTitle] = useState(event ? event.title : '');\n    const [place, setPlace] = useState(event ? event.place : '');\n    // 옵션 모두 선택 후, selectTime으로 넘어온 (00:00 형태의 값)을 전달 받아서 시작시간, 종료시간 저장\n    const [startTime, setStartTime] = useState(event ? event.startTime : '');\n    const [endTime, setEndTime] = useState(event ? event.endTime : '');\n    const [category, setCategory] = useState(event ? event.category : categoryLabels[0] );\n\n    const labels = categoryLabels.map( label => {\n        return      <input\n                        type=\"radio\"\n                        name=\"label\"\n                        checked={category.color === label.color}        // 리액트는 데이터 기반.. 선택되었다면 '선택됨' 정보 갖고 있어야함\n                        className=\"event-category\" \n                        onClick={e => selectCategory(label)}\n                        style={{backgroundColor: label.color}}\n                    />             \n    })\n\n    const settingTitle = (value) => {\n        setTitle(value);\n    }\n\n    const settingPlace = (value) => {\n        setPlace(value);\n    }\n\n    const selectCategory = (value) => {\n        setCategory(value);\n    }\n\n    const saveHandler = () => {\n        closeModal();\n        saveEvent({id: event ? event.id : uuid(),\n            title: title || '일정 제목 없음',\n            place: place || '장소 없음', \n            category, startTime, endTime});\n    }\n\n    return (\n        <div className=\"modal-background\" onClick={e => e.target.closest('.modal') || closeModal()} >\n            <div className=\"modal\">\n                <div className=\"modal-header\">\n                    { event ? 'Edit Event' : 'Add Event'}\n                    { event && <MdOutlineDelete className=\"delete-event-btn\" onClick={() => deleteEvent(event.id) || closeModal()} /> }\n                </div>\n\n                <form className=\"md-input-wrapper\">\n                    <div className=\"event-input-group\">\n                        <label for=\"event-title\">Title</label>\n                        <div className=\"event-inputbox-wrapper\">\n                            <input type=\"text\" id=\"event-title\" value={title} onChange={e => settingTitle(e.target.value)} ></input>\n                        </div>\n                    </div>\n\n                    <div className=\"event-input-group\">\n                        <label for=\"event-time\">Time</label>\n                        <div className=\"timepicker-group\">\n                            <TimePicker timeValue={startTime} selectTime={setStartTime} />\n                            <span>~</span>\n                            <TimePicker  timeValue={endTime} selectTime={setEndTime} />\n                        </div>\n                    </div>\n\n                    <div className=\"event-input-group\">\n                        <label for=\"event-place\">Place</label>\n                        <div className=\"event-inputbox-wrapper\">\n                            <input type=\"text\" id=\"event-place\" value={place} onChange={e => settingPlace(e.target.value)} ></input>\n                        </div>\n                    </div>\n\n                    <div className=\"event-input-group\">\n                        <label for=\"event-category\">Calendar</label>\n                        <div className={classNames(\"event-inputbox-wrapper\", \"select-category\")} >\n                            {labels}\n                        </div>\n                    </div>\n                </form>\n\n                <div className=\"modal-footer\">\n                    <button className=\"close-modal\" onClick={closeModal}>Cancel</button>\n                    <button className=\"save-event-btn\" onClick={saveHandler} >Save</button>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, {useState} from \"react\";\nimport DatePicker from \"./DatePicker\";\nimport TimelineItem from \"./TimelineItem\";\nimport Modal from \"./Modal\";\n\nexport default function Calendar({date,data, changeHandler, categoryLabels, saveEvent, events, deleteEvent}){\n    const [isShown, setIsShown] = useState(false);\n    const [editEvent, setEditEvent] = useState(null);\n    const openModal = () => setIsShown(true);\n    const closeModal = () => {\n        setIsShown(false);\n        setEditEvent(null);\n    }\n        \n    const onClick = (event) => {\n        setEditEvent(event);\n        openModal();\n    }\n\n    const items = events.map( event => <TimelineItem \n        key={event.id} \n        id={event.id} \n        event={event}\n        onClick={() => onClick(event)}\n        />)\n\n    return (\n        <div className='calendar-section' >\n            <div className='calendar-container'>\n               <DatePicker data={data} selectedDate={date} changeHandler={changeHandler}></DatePicker>\n\n               <button className='add-event-btn' onClick={e => {setEditEvent(null); openModal()} }>Add Event</button>\n\n               {isShown \n               &&\n               <Modal \n                    event={editEvent}           // timeline item 눌러서 수정을 위해 Modal창 띄워야할 경우, 해당 event 정보가 필요\n                    closeModal={closeModal}\n                    categoryLabels={categoryLabels} \n                    saveEvent={saveEvent}\n                    deleteEvent={deleteEvent}\n\n                /> }\n               \n                <ul className='timeline'>\n                   {items}\n                </ul>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState} from \"react\";\nimport Category from \"./Category\";\nimport Calendar from \"./Calendar\";\n\nexport default function Monthly({date, data, updateEvent, changeHandler}) {\n    // console.log(data.events);\n    const initialLabels = [\n        {\n            'name':'Personal',\n            'color':'#7367f0'\n        },\n        {\n            'name':'Family',\n            'color':'#28c76f'\n        }, \n        {\n            'name':'Business',\n            'color': '#ff9f43'\n        }\n    ]\n\n    const [categoryLabels, setCategoryLabels] = useState(initialLabels);\n    // const [events, setEvents] = useState([]);\n\n    // const events = (data[date] && data[date].events) || [];\n    // data에 해당 date가 있어야 events에 접근가능\n    const events = (data[date]?.events) || [];      //optional chaining\n\n    const updateLabels = (labels) => {\n        setCategoryLabels(labels);\n    }\n\n \n    const saveEvent = (event) => {\n        let nextEvents = events;\n        // 수정(같은 id를 갖고 있는 event가 있으면 대체)\n        if(events.find(e => e.id === event.id)){\n            nextEvents = events.map(e => {\n                if(e.id === event.id){\n                    return event;\n                } else{\n                    return e;\n                }\n            })\n        }\n        else{\n            //추가\n            nextEvents = [...events, event];\n        }\n        \n        const sortedEvents = nextEvents.sort((a,b) => a.startTime - b.startTime);\n        updateEvent(date, sortedEvents);\n    }\n\n    const deleteEvent = (id) => {\n        const deletedEvents = events.filter(event => event.id !== id );\n        updateEvent(date, deletedEvents)\n    }\n\n    return(\n        <div className='monthly'>\n            <Category initialLabels={initialLabels} updateLabels={updateLabels} />\n            <Calendar \n                date={date} \n                data={data}\n                changeHandler={changeHandler} \n                categoryLabels={categoryLabels}\n                saveEvent={saveEvent}\n                events={events}\n                deleteEvent={deleteEvent}\n            />\n        </div>\n    )\n}\n\n","import React from 'react';\nimport {getDay, enDay} from '../utils/date';\n\nexport default function Date({date}){\n    const [, , day] = date.split('/');\n    return(\n        <div className='date-wrapper'>\n            <p className='date'>{day}</p>\n            <p className='day'>{enDay(getDay(date))}</p>\n        </div>\n    )\n}","import React, {useState, useEffect, useRef} from \"react\";\n\nexport default function Button({title, onClick}){\n    const ref = useRef();\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n    const [offsetLeft, setOffsetLeft] = useState(0);\n    const [offsetTop, setOffsetTop] = useState(0);\n    const [left, setLeft] = useState(0);\n    const [top, setTop] = useState(0);\n    const [radius, setRadius] = useState(0);\n\n    const [isShow, setIsShow] = useState(false);\n\n    // 처음 html 등록됐을 때 실행\n    useEffect( ()=> {\n        if (ref.current){\n            setWidth(ref.current.clientWidth);\n            setHeight(ref.current.clientHeight);\n            setOffsetLeft(ref.current.offsetLeft);\n            setOffsetTop(ref.current.offsetTop);\n        }\n    }, [ref]);\n\n    useEffect( ()=>{\n        setRadius(Math.max(width, height)/2);\n    }, [width, height])\n\n    const clickHandler = (event) => {\n        setLeft(event.clientX - offsetLeft - radius);\n        setTop(event.clientY - offsetTop - radius);\n        setIsShow(true);\n        onClick(event);\n    }\n\n\n    const mouseOverHandler = (event) => {\n        event.target.style.boxShadow = \"0 3px 10px rgb(234, 84, 85, 0.5)\";\n    }\n\n    const removeShadow = (event) => {\n        event.target.style.boxShadow = \"none\";\n    }\n\n    return(\n        <button \n            className=\"add-task-btn\"\n            ref={ref}\n            onClick = {clickHandler} onMouseOver={mouseOverHandler} \n            onMouseOut={removeShadow} onMouseDown={removeShadow}\n            onAnimationEnd={()=>{setIsShow(false)}}\n        >\n            {title}\n            {isShow && <span className=\"ripple\"\n            style={{width: radius*2, height:radius*2, left, top}} />}\n        </button>\n    )\n}","import React, {useState} from \"react\";\nimport AddTaskBtn from \"./AddTaskBtn\";\nimport propTypes from \"prop-types\";\n\nexport default function InputTask({createTask}){\n    const [text, setText] = useState('');\n\n    const changeHandler = (event) => {\n        setText(event.target.value);\n    }\n\n    const clickHandler = () => {\n        createTask(text);\n        setText('');\n    }\n\n    return(\n        <div className='input-container'>\n            <input \n                type='text' \n                className='input-task'\n                placeholder='Task Title' \n                value={text}\n                onChange={changeHandler}\n            />\n            <AddTaskBtn title={'Add Task'} onClick={clickHandler} />\n           \n        </div>\n    )\n}\n\nInputTask.propTypes = {\n    createTask: propTypes.func.isRequired\n}\n","import React, { useState } from \"react\";\nimport {MdClear, MdCheck} from 'react-icons/md';\nimport propTypes from 'prop-types';\nimport classNames from \"classnames\";\n\nexport default function Task({id, title, state, onClick, onChange}) {    \n    const [isChecked, setIsChecked] = useState(state);\n\n    const clickHandler = () => {\n        onClick(id);\n    }\n\n    const toggleHandler = () => {\n        onChange(id);\n        setIsChecked(!isChecked);\n    }\n\n    return(\n        <li className='task'>\n            <label className={classNames('checkbox', {checked : isChecked})}>\n                <input \n                type='checkbox' \n                className='checkbox-input' \n                onChange={toggleHandler} \n                checked={isChecked}\n                />\n                <MdCheck className='checkmark' />\n            </label>\n            <span>{title}</span>\n            <MdClear className='delete-task-btn' onClick={clickHandler}/>\n        </li>\n    )\n}\n\nTask.propTypes = {\n    id: propTypes.number.isRequired,\n    title: propTypes.string.isRequired,\n    state: propTypes.bool.isRequired\n}\n","import React from \"react\";\nimport Task from \"./Task\";\nimport propTypes from 'prop-types';\n\nexport default function TaskList({tasks,removeTask, toggleHandler}){\n    const todolist = tasks.map(({id, title, state}) => <Task key={id} id={id} title={title} state={state} onClick={removeTask} onChange={toggleHandler} /> );\n\n    return(\n        <ul className='todolist'>\n            {todolist}\n        </ul>\n    )\n}\n\nTaskList.propTypes = {\n    tasks: propTypes.arrayOf(\n        propTypes.shape({\n            id: propTypes.number.isRequired,\n            title: propTypes.string.isRequired,\n            state: propTypes.bool.isRequired\n        })\n    )\n}\n","import React from \"react\";\nimport InputTask from \"./InputTask\";\nimport TaskList from \"./TaskList\";\n\nexport default function TodoList({tasks, createTask, removeTask, toggleHandler}){\n    return(\n        <div className='todolist-wrapper'>\n            <p className='todolist-header'>To do List</p>\n            <div className='todolist-container'>\n                <InputTask createTask={createTask} />\n                <TaskList tasks={tasks} removeTask={removeTask} toggleHandler={toggleHandler} />\n            </div>\n        </div>\n       \n    )\n}\n\n","import React, { useState } from \"react\";\nimport {MdModeEdit, MdDone} from \"react-icons/md\"; \n\nexport default function Note({title, content, changeHandler, typing}){\n    const [isEditing, setIsEditing] = useState(!title);\n    \n    const toggleHandler = () => {\n        setIsEditing(!isEditing);\n    }\n    \n    return (\n        <div className='note-section' >\n            <div className='note-container' >\n                <div className='note-header'>\n                    <p className='note-header-title' >Note</p>\n                    { isEditing ? <MdDone onClick={toggleHandler} className='done-btn'/> : <MdModeEdit onClick={toggleHandler} className='edit-btn' /> }\n                </div>\n                {\n                    isEditing\n                    ?\n                    <>\n                        <input type='text' \n                            className='note-title' \n                            placeholder='Note Title' \n                            value={title} \n                            onChange={e => changeHandler(e.target.value)}\n                        />\n                        <textarea className='note' value={content} onChange={e => typing(e.target.value)} ></textarea>\n                    </>\n                    :\n                    <>\n                        <p className='title'>{title}</p>\n                        <div className='content'> {content}</div>\n                    </>\n                }\n            </div>\n        </div> \n    )\n}\n\n","import React, {useState, useEffect} from \"react\";\nimport Date from \"./Date\";\nimport TodoList from \"./TodoList\";\nimport Note from \"./Note\";\nimport { uuid } from \"../utils/uuid\";\nimport { today } from \"../utils/date\";\n\nexport default function Daily({date, data, update}){\n    const [title, setTitle] = useState(data?.note?.title);\n    const [content, setContent] = useState(data?.note?.content);\n    const [tasks, setTasks] = useState(data?.tasks);\n    const [curDate, setCurDate] = useState(date);\n\n    useEffect(() => {\n        setTasks(data?.tasks);\n        setTitle(data?.note?.title);\n        setContent(data?.note?.content);\n        update(curDate, tasks, {title, content});\n        setCurDate(date);\n    }, [date])\n\n    const changeHandler = (text) => {\n        setTitle(text);\n    }\n    \n    const typing = (text) => {\n        setContent(text);\n    }\n    \n    const createTask = (text) => {\n        setTasks([\n            ...tasks,\n            {\n                id: uuid(),\n                title: text,\n                state: false\n            }\n        ]);\n    }\n\n    function removeTask(id){\n        const todolist = tasks.filter(task => task.id !== id);\n        setTasks(todolist);\n    }\n\n    function toggleHandler(id){\n        const todolist = tasks.map(task => {\n            if (task.id === id) {\n              return {\n                ...task,\n                state: !task.state,\n              }\n            }\n            return task;\n          });\n\n        setTasks(todolist);\n    }\n\n    return (\n        <div className='daily'>\n            <div style={ {display:'flex', height: '45%'} }>\n                <Date date={date} />\n                <TodoList\n                    tasks={tasks}\n                    createTask={createTask}\n                    removeTask={removeTask}\n                    toggleHandler={toggleHandler}\n                />\n            </div>\n\n            <Note \n                title={title}\n                content={content}\n                changeHandler={changeHandler}\n                typing={typing}\n            />\n        </div>\n    )\n}\n\nDaily.defaultProps = {\n    date: today(),\n    data: {\n        tasks: [],\n        note: {\n            title:'',\n            content:''\n        },\n        events: []\n    }\n}\n","import React, {useState} from \"react\";\nimport './App.css';\nimport Monthly from \"./components/Monthly\";\nimport Daily from \"./components/Daily\";\nimport {today} from \"./utils/date\"\nimport { uuid } from \"./utils/uuid\";\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [date, setDate] = useState(today());\n\n  const changeHandler = (value) => {\n    setDate(value);\n  }\n\n  const update = (date, tasks, note) => {\n    setData({\n      ...data,\n      [date]: {\n        ...data[date],\n        tasks,\n        note\n      }\n    });\n  }\n\n  const updateEvent = (date, events) => {\n    setData({\n      ...data,\n      [date] : {\n        ...data[date],\n        events,\n      }\n    })\n  }\n\n  console.log(data);\n\n  return (\n    <div className=\"App\">\n      <Monthly date={date} data={data} updateEvent={updateEvent} changeHandler={changeHandler} />\n      <Daily date={date} data={data[date]} update={update} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}